#Область ОписаниеПеременных

&НаКлиенте
Перем СхемаЗапроса;

#КонецОбласти

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура УстановитьИсточникДанных(ИсточникДанных, Первые = -1, Различные = Ложь, Разрешенные = Ложь) Экспорт
	
	_ИсточникДанных = ИсточникДанных;
	Если ТипЗнч(ИсточникДанных) = Тип("ФормаКлиентскогоПриложения") Тогда
		_ИсточникДанных = ИсточникДанных.Получить();
	КонецЕсли;
	
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер.УстановитьИсточникДанных(СхемаЗапроса,
		_ИсточникДанных, Первые, Различные, Разрешенные);
		
КонецПроцедуры

&НаКлиенте
Функция Псевдоним(ИмяПсевдонима) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьПсевдонимИсточника(СхемаЗапроса, ИмяПсевдонима);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция ВТаблицуЗначений() Экспорт
	ТаблицаЗначений = СхПроцессорыСхемЗапросаСлужебныйВызовСервера
		.ПолучитьТаблицуЗначений(СхемаЗапроса);
	Возврат ТаблицаЗначений;
КонецФункции

&НаКлиенте
Функция ВМассив(ИмяКолонки) Экспорт
	Массив = СхПроцессорыСхемЗапросаСлужебныйВызовСервера
		.ПолучитьМассив(СхемаЗапроса, ИмяКолонки);
	Возврат Массив;
КонецФункции

&НаКлиенте
Функция Первые(Количество) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьПервые(СхемаЗапроса, Количество);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Различные() Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьРазличные(СхемаЗапроса);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Разрешенные() Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьРазрешенные(СхемаЗапроса);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Выбрать(Поля) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьПоляВыборки(СхемаЗапроса, Поля);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция ВыбратьВсе() Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьВыборВсехПолей(СхемаЗапроса);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция ПараметрВиртуальнойТаблицы(Номер, Выражение) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьПараметрВиртуальнойТаблицы(СхемаЗапроса, Номер, Выражение);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Поместить(ИмяВременнойТаблицы) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьИмяВременнойТаблицы(СхемаЗапроса, ИмяВременнойТаблицы);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Где(Предикат) Экспорт
	
	Если ТипЗнч(Предикат) = Тип("Структура") Тогда
		_Предикат = Предикат;
	ИначеЕсли ТипЗнч(Предикат) = Тип("ФормаКлиентскогоПриложения") Тогда
		_Предикат = Предикат.Получить();
	Иначе
		ВызватьИсключение "Неверный тип предиката в методе ""Где""";
	КонецЕсли;
	
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер.УстановитьУсловие(СхемаЗапроса, _Предикат);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция ЛевоеСоединение(ИсточникДанных, Предикат = Неопределено) Экспорт
	СоздатьСоединение("Левое", ИсточникДанных, Предикат);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция ПравоеСоединение(ИсточникДанных, Предикат = Неопределено) Экспорт
	СоздатьСоединение("Правое", ИсточникДанных, Предикат);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция ВнутреннееСоединение(ИсточникДанных, Предикат = Неопределено) Экспорт
	СоздатьСоединение("Внутреннее", ИсточникДанных, Предикат);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Сгруппировать(Поля) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьГруппировку(СхемаЗапроса, Поля);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция ВыборКогда(Предикат, ЗначениеИстина, ЗначениеЛожь, Псевдоним = "") Экспорт
	
	Если ТипЗнч(Предикат) = Тип("Структура") Тогда
		_Предикат = Предикат;
	ИначеЕсли ТипЗнч(Предикат) = Тип("ФормаКлиентскогоПриложения") Тогда
		_Предикат = Предикат.Получить();
	Иначе
		ВызватьИсключение "Неверный тип предиката в методе ""ВыборКогда""";
	КонецЕсли;

	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьВыборКогда(СхемаЗапроса, _Предикат, ЗначениеИстина, ЗначениеЛожь, Псевдоним);
	Возврат ЭтотОбъект;
	
КонецФункции

&НаКлиенте
Функция Количество(Поле) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьКоличество(СхемаЗапроса, Поле);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Сумма(Поле) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьСумму(СхемаЗапроса, Поле);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Максимум(Поле) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьМаксимум(СхемаЗапроса, Поле);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Минимум(Поле) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьМинимум(СхемаЗапроса, Поле);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Выразить(Поле, ОписаниеТипа, Псевдоним = "") Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьВыразить(СхемаЗапроса, Поле, ОписаниеТипа, Псевдоним);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Упорядочить(Поля) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьПорядок(СхемаЗапроса, Поля);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Итоги(Поля) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьИтоги(СхемаЗапроса, Поля);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Объединить(ИсточникДанных) Экспорт
	
	Если ТипЗнч(ИсточникДанных) = Тип("Строка") Тогда
		_ИсточникДанных = ИсточникДанных;
	ИначеЕсли ТипЗнч(ИсточникДанных) = Тип("ФормаКлиентскогоПриложения") Тогда
		_ИсточникДанных = ИсточникДанных.Получить();
	Иначе
		ВызватьИсключение "Объединить: неверный тип источника данных";
	КонецЕсли;
	
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьОбъединение(СхемаЗапроса, _ИсточникДанных);
	Возврат ЭтотОбъект;
	
КонецФункции

&НаКлиенте
Функция ОбъединитьВсе(ИсточникДанных) Экспорт
	
	Если ТипЗнч(ИсточникДанных) = Тип("Строка") Тогда
		_ИсточникДанных = ИсточникДанных;
	ИначеЕсли ТипЗнч(ИсточникДанных) = Тип("ФормаКлиентскогоПриложения") Тогда
		_ИсточникДанных = ИсточникДанных.Получить();
	Иначе
		ВызватьИсключение "Объединить: неверный тип источника данных";
	КонецЕсли;
	
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер
		.УстановитьОбъединениеВсе(СхемаЗапроса, _ИсточникДанных);
	Возврат ЭтотОбъект;
	
КонецФункции

&НаКлиенте
Функция Параметры(Параметры) Экспорт
	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер.УстановитьПараметры(СхемаЗапроса, Параметры);
	Возврат ЭтотОбъект;
КонецФункции

&НаКлиенте
Функция Получить() Экспорт
	
	Возврат СхемаЗапроса;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьСоединение(ТипСоединения, ИсточникДанных, Предикат)
	
	// TODO: ИсточникДанных может быть структурой? Что делать в этом случае?
	Если ТипЗнч(ИсточникДанных) = Тип("Строка") Тогда
		_ИсточникДанных = ИсточникДанных;
	ИначеЕсли ТипЗнч(ИсточникДанных) = Тип("ФормаКлиентскогоПриложения") Тогда
		_ИсточникДанных = ИсточникДанных.Получить();
	Иначе
		ВызватьИсключение "ЛевоеСоединение: неверный тип источника данных";
	КонецЕсли;
	
	Если ТипЗнч(Предикат) = Тип("Структура") Или Предикат = Неопределено Тогда
		_Предикат = Предикат;
	ИначеЕсли ТипЗнч(Предикат) = Тип("ФормаКлиентскогоПриложения") Тогда
		_Предикат = Предикат.Получить();
	Иначе
		ВызватьИсключение "ЛевоеСоединение: неверный тип предиката";
	КонецЕсли;

	СхПроцессорыСхемЗапросаСлужебныйКлиентСервер.ДобавитьСоединение(
		СхемаЗапроса, ТипСоединения, _ИсточникДанных, _Предикат);
	
КонецПроцедуры

#КонецОбласти
