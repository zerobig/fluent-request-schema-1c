#Область ПрограммныйИнтерфейс

Процедура УстановитьИсточникДанных(СхемаЗапроса, ИсточникДанных, Первые, Различные, Разрешенные) Экспорт
	
	Если СхемаЗапроса = Неопределено Тогда
		СхемаЗапроса = Новый Структура;
	КонецЕсли;
	
	Если СтрНайти(ИсточникДанных, " КАК ") > 0 Тогда
		ИнформацияОбИсточникеДанных = СтрЗаменить(ИсточникДанных, " КАК ", Символы.ПС);
		ИсточникДанных = СтрПолучитьСтроку(ИнформацияОбИсточникеДанных, 1);
		Псевдоним =  СтрПолучитьСтроку(ИнформацияОбИсточникеДанных, 2);
	КонецЕсли;
	
	СхемаЗапроса.Вставить("ИсточникДанных", ИсточникДанных);
	Если ЗначениеЗаполнено(Псевдоним) Тогда
		СхемаЗапроса.Вставить("ПсевдонимИсточника", Псевдоним);
	КонецЕсли;
	Если Первые >= 0 Тогда
		СхемаЗапроса.Вставить("Первые", Первые);
	КонецЕсли;
	СхемаЗапроса.Вставить("Различные", Различные);
	СхемаЗапроса.Вставить("Разрешенные", Разрешенные);
	
КонецПроцедуры

Процедура УстановитьПсевдонимИсточника(СхемаЗапроса, Псевдоним) Экспорт
	
	СхемаЗапроса.Вставить("ПсевдонимИсточника", Псевдоним);
	
КонецПроцедуры

Процедура УстановитьПервые(СхемаЗапроса, Количество) Экспорт
	
	СхемаЗапроса.Вставить("Первые", Количество);
	
КонецПроцедуры

Процедура УстановитьРазличные(СхемаЗапроса) Экспорт
	
	СхемаЗапроса.Вставить("Различные", Истина);
	
КонецПроцедуры

Процедура УстановитьРазрешенные(СхемаЗапроса) Экспорт
	
	СхемаЗапроса.Вставить("Разрешенные", Истина);
	
КонецПроцедуры

Процедура УстановитьВыборВсехПолей(СхемаЗапроса) Экспорт
	
	СхемаЗапроса.Вставить("ВсеПоля", Истина);
	
КонецПроцедуры

Процедура УстановитьПоляВыборки(СхемаЗапроса, Поля) Экспорт
	
	Если ТипЗнч(Поля) = Тип("Строка") Тогда
		НовыеПоля = ПолучитьПоляИзСтроки(Поля);
	ИначеЕсли ТипЗнч(Поля) = Тип("Массив") Тогда
		НовыеПоля = Поля;
	ИначеЕсли ТипЗнч(Поля) = Тип("Структура") Тогда
		НовыеПоля = Новый Массив;
		НовыеПоля.Добавить(Поля);
	Иначе
		ВызватьИсключение "УстановитьПоляВыборки: неподдерживаемый тип данных в параметре ""Поля""";
	КонецЕсли;
	
	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Поля") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Поля;
	КонецЕсли;
	Для каждого НовоеПоле Из НовыеПоля Цикл
		Поле = ПолучитьПоле(НовоеПоле);
		МассивПолей.Добавить(Поле);
	КонецЦикла;

	СхемаЗапроса.Вставить("Поля", МассивПолей);
	
КонецПроцедуры

Процедура УстановитьИмяВременнойТаблицы(СхемаЗапроса, ИмяВременнойТаблицы) Экспорт
	
	СхемаЗапроса.Вставить("ИмяВременнойТаблицы", ИмяВременнойТаблицы);
	
КонецПроцедуры

Процедура УстановитьПараметрВиртуальнойТаблицы(СхемаЗапроса, Номер, Выражение) Экспорт
	
	МассивОбъединений = Новый Массив;
	Если СхемаЗапроса.Свойство("Объединения") И ТипЗнч(СхемаЗапроса.Объединения) = Тип("Массив") Тогда
		МассивОбъединений = СхемаЗапроса.Объединения;
	КонецЕсли;

	МассивПараметров = Новый Массив;
	Если СхемаЗапроса.Свойство("Параметры") И ТипЗнч(СхемаЗапроса.Параметры) = Тип("Массив") Тогда
		МассивПараметров = СхемаЗапроса.Параметры;
	КонецЕсли;
	
	Если МассивОбъединений.Количество() = 0 Тогда
		СхемаЗапроса.Вставить("ПараметрыВиртуальнойТаблицы",
			ПолучитьПараметрыВиртуальнойТаблицы(СхемаЗапроса, Номер, Выражение, МассивПараметров));
	Иначе
		
		ПоследнееОбъединение = МассивОбъединений[МассивОбъединений.Количество() - 1];
		ПоследнееОбъединение.Вставить("ПараметрыВиртуальнойТаблицы",
			ПолучитьПараметрыВиртуальнойТаблицы(ПоследнееОбъединение, Номер, Выражение, МассивПараметров));
			
		МассивОбъединений[МассивОбъединений.Количество() - 1] = ПоследнееОбъединение;
		СхемаЗапроса.Объединения = МассивОбъединений;
		
	КонецЕсли;

	СхемаЗапроса.Вставить("Параметры", МассивПараметров);
	
КонецПроцедуры

Процедура УстановитьУсловие(СхемаЗапроса, Предикат) Экспорт
	
	СхемаЗапроса.Вставить("Условия", ПолучитьУсловияОтбора(СхемаЗапроса, Предикат));
	
КонецПроцедуры

Процедура ДобавитьСоединение(СхемаЗапроса, ТипСоединения, ИсточникДанных, Предикат) Экспорт
	
	МассивСоединений = Новый Массив;
	Если СхемаЗапроса.Свойство("Соединения") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивСоединений = СхемаЗапроса.Соединения;
	КонецЕсли;
		
	Если ТипЗнч(ИсточникДанных) = Тип("Строка") Тогда
		Псевдоним = "";
		Если СтрНайти(ИсточникДанных, " КАК ") > 0 Тогда
			ИнформацияОбИсточникеДанных = СтрЗаменить(ИсточникДанных, " КАК ", Символы.ПС);
			ИсточникДанных = СтрПолучитьСтроку(ИнформацияОбИсточникеДанных, 1);
			Псевдоним =  СтрПолучитьСтроку(ИнформацияОбИсточникеДанных, 2);
		КонецЕсли;
	Иначе // Вложенный запрос
		Если Не ИсточникДанных.Свойство("ПсевдонимИсточника") Или
			ПустаяСтрока(ИсточникДанных.ПсевдонимИсточника) Тогда
			
			ВызватьИсключение "ДобавитьСоединение: у вложенного запроса обязательно должен быть псевдоним";
		КонецЕсли;

		Псевдоним = ИсточникДанных.ПсевдонимИсточника;
	КонецЕсли;
		
	МассивСоединений.Добавить(Новый Структура("ТипСоединения, ИсточникДанных, Псевдоним, Условие",
		ТипСоединения, ИсточникДанных, Псевдоним, ПолучитьУсловияСоединения(Предикат)));
	СхемаЗапроса.Вставить("Соединения", МассивСоединений);
	
КонецПроцедуры

Процедура УстановитьГруппировку(СхемаЗапроса, Поля) Экспорт
	
	Если ТипЗнч(Поля) = Тип("Строка") Тогда
		НовыеПоля = ПолучитьПоляИзСтроки(Поля);
	ИначеЕсли ТипЗнч(Поля) = Тип("Массив") Тогда
		НовыеПоля = Поля;
	Иначе
		ВызватьИсключение "УстановитьГруппировку: неподдерживаемый тип данных в параметре ""Поля""";
	КонецЕсли;
	
	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Группировка") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Поля;
	КонецЕсли;
	Для каждого НовоеПоле Из НовыеПоля Цикл
		МассивПолей.Добавить(НовоеПоле);
	КонецЦикла;
	
	СхемаЗапроса.Вставить("Группировка", МассивПолей);
	
КонецПроцедуры

Процедура УстановитьПорядок(СхемаЗапроса, Поля) Экспорт
	
	Если ТипЗнч(Поля) = Тип("Строка") Тогда
		НовыеПоля = ПолучитьПоляИзСтроки(Поля);
	ИначеЕсли ТипЗнч(Поля) = Тип("Массив") Тогда
		НовыеПоля = Поля;
	Иначе
		ВызватьИсключение "УстановитьПорядок: неподдерживаемый тип данных в параметре ""Поля""";
	КонецЕсли;
	
	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Порядок") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Порядок;
	КонецЕсли;
	Для каждого НовоеПоле Из НовыеПоля Цикл
		МассивПолей.Добавить(ПолучитьЭлементПорядка(НовоеПоле));
	КонецЦикла;
	
	СхемаЗапроса.Вставить("Порядок", МассивПолей);
	
КонецПроцедуры

Процедура УстановитьИтоги(СхемаЗапроса, Поля) Экспорт
	
	Если ТипЗнч(Поля) = Тип("Строка") Тогда
		НовыеПоля = ПолучитьПоляИзСтроки(Поля);
	ИначеЕсли ТипЗнч(Поля) = Тип("Массив") Тогда
		НовыеПоля = Поля;
	Иначе
		ВызватьИсключение "УстановитьИтоги: неподдерживаемый тип данных в параметре ""Поля""";
	КонецЕсли;
	
	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Итоги") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Итоги;
	КонецЕсли;
	Для каждого НовоеПоле Из НовыеПоля Цикл
		МассивПолей.Добавить(НовоеПоле);
	КонецЦикла;
	
	СхемаЗапроса.Вставить("Итоги", МассивПолей);
	
КонецПроцедуры

Процедура УстановитьОбъединение(СхемаЗапроса, ИсточникДанных) Экспорт
	
	МассивОбъединений = Новый Массив;
	Если СхемаЗапроса.Свойство("Объединения") И ТипЗнч(СхемаЗапроса.Объединения) = Тип("Массив") Тогда
		МассивОбъединений = СхемаЗапроса.Объединения;
	КонецЕсли;
	
	СхемаЗапросаОбъединения = Новый Структура;
	СхемаЗапросаОбъединения.Вставить("ИсточникДанных", ИсточникДанных);
	
	МассивОбъединений.Добавить(Новый Структура("СтруктураСхемыЗапроса, ТипОбъединения",
		СхемаЗапросаОбъединения, Ложь));
	СхемаЗапроса.Вставить("Объединения", МассивОбъединений);
	
КонецПроцедуры

Процедура УстановитьОбъединениеВсе(СхемаЗапроса, ИсточникДанных) Экспорт
	
	МассивОбъединений = Новый Массив;
	Если СхемаЗапроса.Свойство("Объединения") И ТипЗнч(СхемаЗапроса.Объединения) = Тип("Массив") Тогда
		МассивОбъединений = СхемаЗапроса.Объединения;
	КонецЕсли;
	
	СхемаЗапросаОбъединения = Новый Структура;
	СхемаЗапросаОбъединения.Вставить("ИсточникДанных", ИсточникДанных);

	МассивОбъединений.Добавить(Новый Структура("СтруктураСхемыЗапроса, ТипОбъединения",
		СхемаЗапросаОбъединения, Истина));
	СхемаЗапроса.Вставить("Объединения", МассивОбъединений);
	
КонецПроцедуры

Процедура УстановитьПараметры(СхемаЗапроса, Параметры) Экспорт
	
	МассивПараметров = Новый Массив;
	Если СхемаЗапроса.Свойство("Параметры") И ТипЗнч(СхемаЗапроса.Параметры) = Тип("Массив") Тогда
		МассивПараметров = СхемаЗапроса.Параметры;
	КонецЕсли;

	Для каждого Параметр Из Параметры Цикл
		МассивПараметров.Добавить(Параметр);
	КонецЦикла;
	
	СхемаЗапроса.Вставить("Параметры", МассивПараметров);
	
КонецПроцедуры

#Область Функции

Процедура УстановитьВыборКогда(СхемаЗапроса, Предикат, ЗначениеИстина, ЗначениеЛожь, Псевдоним) Экспорт
	
	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Поля") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Поля;
	КонецЕсли;

	МассивПараметров = Новый Массив;
	Если СхемаЗапроса.Свойство("Параметры") И ТипЗнч(СхемаЗапроса.Параметры) = Тип("Массив") Тогда
		МассивПараметров = СхемаЗапроса.Параметры;
	КонецЕсли;
	
	Условия = ПолучитьУсловияОтбора(СхемаЗапроса, Предикат);
	УсловиеСтрокой = ПолучитьУсловияСтрокой(Условия, МассивПараметров);
	
	ПриведенноеЗначениеИстина = ПривестиЗначение(ЗначениеИстина);
	ПриведенноеЗначениеЛожь = ПривестиЗначение(ЗначениеЛожь);
	
	ШаблонВыборКогда = "ВЫБОР
	|	КОГДА %1
	|		ТОГДА %2
	|	ИНАЧЕ %3
	|КОНЕЦ";
	
	МассивПолей.Добавить(Новый Структура("ИмяПоля, Источник, Псевдоним",
		СтрШаблон(ШаблонВыборКогда, УсловиеСтрокой, ПриведенноеЗначениеИстина, ПриведенноеЗначениеЛожь),
		Неопределено,
		Псевдоним));
	
	СхемаЗапроса.Вставить("Поля", МассивПолей);
	СхемаЗапроса.Вставить("Параметры", МассивПараметров);
	
КонецПроцедуры

Процедура УстановитьКоличество(СхемаЗапроса, Поле) Экспорт

	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Поля") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Поля;
	КонецЕсли;
	
	НовоеПоле = ПолучитьПоле(Поле);
	НовоеПоле.ИмяПоля = СтрШаблон("КОЛИЧЕСТВО(%1)", НовоеПоле.ИмяПоля);

	МассивПолей.Добавить(НовоеПоле);
	СхемаЗапроса.Вставить("Поля", МассивПолей);
	
КонецПроцедуры

Процедура УстановитьСумму(СхемаЗапроса, Поле) Экспорт

	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Поля") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Поля;
	КонецЕсли;
	
	НовоеПоле = ПолучитьПоле(Поле);
	НовоеПоле.ИмяПоля = СтрШаблон("СУММА(%1)", НовоеПоле.ИмяПоля);
	
	МассивПолей.Добавить(НовоеПоле);
	СхемаЗапроса.Вставить("Поля", МассивПолей);
	
КонецПроцедуры

Процедура УстановитьМаксимум(СхемаЗапроса, Поле) Экспорт

	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Поля") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Поля;
	КонецЕсли;
	
	НовоеПоле = ПолучитьПоле(Поле);
	НовоеПоле.ИмяПоля = СтрШаблон("МАКСИМУМ(%1)", НовоеПоле.ИмяПоля);
	
	МассивПолей.Добавить(НовоеПоле);
	СхемаЗапроса.Вставить("Поля", МассивПолей);
	
КонецПроцедуры

Процедура УстановитьМинимум(СхемаЗапроса, Поле) Экспорт

	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Поля") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Поля;
	КонецЕсли;
	
	НовоеПоле = ПолучитьПоле(Поле);
	НовоеПоле.ИмяПоля = СтрШаблон("МИНИМУМ(%1)", НовоеПоле.ИмяПоля);
	
	МассивПолей.Добавить(НовоеПоле);
	СхемаЗапроса.Вставить("Поля", МассивПолей);
	
КонецПроцедуры

Процедура УстановитьВыразить(СхемаЗапроса, Поле, ОписаниеТипа, Псевдоним) Экспорт

	МассивПолей = Новый Массив;
	Если СхемаЗапроса.Свойство("Поля") И ТипЗнч(СхемаЗапроса.Поля) = Тип("Массив") Тогда
		МассивПолей = СхемаЗапроса.Поля;
	КонецЕсли;
	
	НовоеПоле = ПолучитьПоле(Поле);
	Если НовоеПоле.Источник = Неопределено Тогда
		ШаблонВыражения = "ВЫРАЗИТЬ(%2 КАК %3)";
	Иначе
		ШаблонВыражения = "ВЫРАЗИТЬ(%1.%2 КАК %3)";
	КонецЕсли;
	НовоеПоле.ИмяПоля = СтрШаблон(ШаблонВыражения,
		НовоеПоле.Источник,
		НовоеПоле.ИмяПоля,
		СхОбщегоНазначенийКлиентСервер.ПолучитьТипИзОписания(ОписаниеТипа));
	
	Если ПустаяСтрока(НовоеПоле.Псевдоним) Тогда
		НовоеПоле.Псевдоним = Псевдоним;
	КонецЕсли;

	МассивПолей.Добавить(НовоеПоле);
	СхемаЗапроса.Вставить("Поля", МассивПолей);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПоляИзСтроки(СтрокаИменПолей)
	
	МассивПолей = СтрРазделить(СтрокаИменПолей, ",", Ложь);
	Для Сч = 0 По МассивПолей.Количество() - 1 Цикл
		МассивПолей[Сч] = СокрЛП(МассивПолей[Сч]);
	КонецЦикла;
	
	Возврат МассивПолей;
	
КонецФункции

Функция ПолучитьПоле(Поле)
	
	// TODO: Строки проверять на корректность синтаксиса - отсутствие пробелов и спец.символов
	// TODO: Не функция, а какая-то жесть получилась. Рефакторить!
	
	Если ТипЗнч(Поле) = Тип("Строка") Тогда
		
		Если СтрНайти(Поле, " КАК ") > 0 Тогда
			Псевдоним = Прав(Поле, СтрДлина(Поле) - СтрНайти(Поле, " КАК ") - 4);
			БезПсевдонима = Лев(Поле, СтрНайти(Поле, " КАК ") - 1);

			Если СтрНайти(ВРег(Поле), "ВЫРАЗИТЬ(") > 0 Или
				(СтрНайти(ВРег(Поле), "ВЫБОР") > 0 И
					СтрНайти(ВРег(Поле), "КОГДА") > 0 И
					СтрНайти(ВРег(Поле), "ТОГДА") > 0 И
					СтрНайти(ВРег(Поле), "ИНАЧЕ") > 0 И
					СтрНайти(ВРег(Поле), "КОНЕЦ") > 0) Тогда
					
				Возврат Новый Структура("ИмяПоля, Источник, Псевдоним",
					БезПсевдонима,
					Неопределено,
					Псевдоним);
			КонецЕсли;
			
			// Вырезаю поле из агрегатной функции
			Если СтрНайти(БезПсевдонима, "(") > 0 И СтрНайти(БезПсевдонима, ")") > 0 Тогда
				БезПсевдонима = Сред(БезПсевдонима,
					СтрНайти(БезПсевдонима, "(") + 1,
					СтрНайти(БезПсевдонима, ")") - СтрНайти(БезПсевдонима, "(") - 1);
			КонецЕсли;
			
			Возврат Новый Структура("ИмяПоля, Источник, Псевдоним",
				ПолучитьИмяПоляБезИсточника(БезПсевдонима),
				ПолучитьИсточникИзИмениПоля(БезПсевдонима),
				Псевдоним);
		КонецЕсли;
			
		Возврат Новый Структура("ИмяПоля, Источник, Псевдоним",
			ПолучитьИмяПоляБезИсточника(Поле),
			ПолучитьИсточникИзИмениПоля(Поле),
			Неопределено);
			
	ИначеЕсли ТипЗнч(Поле) = Тип("Структура") Тогда
		
		Если Поле.Свойство("ИмяПоля") Тогда
			Если Поле.Свойство("Источник") И Не Поле.Источник = Неопределено Тогда
				Если Поле.Свойство("Псевдоним") Тогда
					Возврат Поле;
				КонецЕсли;
				
				Возврат Новый Структура("ИмяПоля, Источник, Псевдоним",
					ПолучитьИмяПоляБезИсточника(Поле.ИмяПоля),
					ПолучитьИсточникИзИмениПоля(Поле.ИмяПоля),
					Неопределено);
			КонецЕсли;
			
			Если Поле.Свойство("Псевдоним") Тогда
				Возврат Новый Структура("ИмяПоля, Источник, Псевдоним",
					ПолучитьИмяПоляБезИсточника(Поле.ИмяПоля),
					ПолучитьИсточникИзИмениПоля(Поле.ИмяПоля),
					Поле.Псевдоним);
			КонецЕсли;
			
			Возврат Новый Структура("ИмяПоля, Источник, Псевдоним",
				ПолучитьИмяПоляБезИсточника(Поле.ИмяПоля),
				ПолучитьИсточникИзИмениПоля(Поле.ИмяПоля),
				Неопределено);
		КонецЕсли;
		
		ВызватьИсключение "ПолучитьПоле: некорректная структура передана в параметре ""Поле""";
		
	КонецЕсли;

	ВызватьИсключение "ПолучитьПоле: неподдерживаемый тип данных в параметре ""Поле""";
	
КонецФункции

Функция ПолучитьИмяПоляБезИсточника(ИмяПоля)
	
	Если СтрНайти(ИмяПоля, ".") > 0 Тогда
		МассивЭлементовПоля = СтрРазделить(ИмяПоля, ".");
		МассивЭлементовПоля.Удалить(0);
		Возврат СтрСоединить(МассивЭлементовПоля, ".");
	КонецЕсли;
	
	Возврат ИмяПоля;
	
КонецФункции

Функция ПолучитьИсточникИзИмениПоля(ИмяПоля)
	
	Если СтрНайти(ИмяПоля, ".") > 0 Тогда
		МассивЭлементовПоля = СтрРазделить(ИмяПоля, ".");
		Возврат МассивЭлементовПоля[0];
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// СхемаЗапроса может быть или структурой запроса или структурой объединения,
// так что установка каких-то общих данных запроса, типа парметров запроса, надо
// выполнять вне пределов этой функции. Для этого и передаётся МассивПараметров
Функция ПолучитьПараметрыВиртуальнойТаблицы(СхемаЗапроса, Номер, Выражение, МассивПараметров)
	
	ПараметрыВиртуальнойТаблицы = Новый Массив;
	Если СхемаЗапроса.Свойство("ПараметрыВиртуальнойТаблицы") И ТипЗнч(СхемаЗапроса.ПараметрыВиртуальнойТаблицы) = Тип("Массив") Тогда
		ПараметрыВиртуальнойТаблицы = СхемаЗапроса.ПараметрыВиртуальнойТаблицы;
	КонецЕсли;

	Если ПараметрыВиртуальнойТаблицы.Количество() >= Номер Тогда
		Если ТипЗнч(Выражение) = Тип("Строка") Тогда
			ПараметрыВиртуальнойТаблицы[Номер - 1] = Выражение;
		Иначе
			Условия = ПолучитьУсловияОтбора(СхемаЗапроса, Выражение);
			УсловиеСтрокой = ПолучитьУсловияСтрокой(Условия, МассивПараметров);

			ПараметрыВиртуальнойТаблицы.Добавить(УсловиеСтрокой);
		КонецЕсли;
	Иначе
		Для Сч = ПараметрыВиртуальнойТаблицы.Количество() По Номер - 1 Цикл
			Если Сч = Номер - 1 Тогда
				Если ТипЗнч(Выражение) = Тип("Строка") Тогда
					ПараметрыВиртуальнойТаблицы.Добавить(Выражение);
				Иначе
					Условия = ПолучитьУсловияОтбора(СхемаЗапроса, Выражение);
					УсловиеСтрокой = ПолучитьУсловияСтрокой(Условия, МассивПараметров);

					ПараметрыВиртуальнойТаблицы.Добавить(УсловиеСтрокой);
				КонецЕсли;
			Иначе
				ПараметрыВиртуальнойТаблицы.Добавить();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПараметрыВиртуальнойТаблицы;
	
КонецФункции

Функция ПолучитьУсловияОтбора(СхемаЗапроса, Предикат)
	
	МассивУсловий = Новый Массив;
	Если СхемаЗапроса.Свойство("СчетчикПараметров") И ТипЗнч(СхемаЗапроса.СчетчикПараметров) = Тип("Число") Тогда
		Сч = СхемаЗапроса.СчетчикПараметров;
	Иначе
		Сч = 0;
	КонецЕсли;
	
	Для каждого Условие Из Предикат.Условия Цикл
		ИмяПараметра = СтрШаблон("Параметр_%1", Сч);
		
		Шаблон = ШаблонУсловия(Условие.ВидСравнения);
		Если СтрНайти(Шаблон, "%3") > 0 Тогда
			Сч = Сч + 1;
			ИмяВторогоПараметра = СтрШаблон("Параметр_%1", Сч);
			
			УсловиеСтрокой = СтрШаблон(Шаблон, Условие.ИмяРеквизита, ИмяПараметра, ИмяВторогоПараметра);
			МассивУсловий.Добавить(Новый Структура("ИмяПараметра, УсловиеСтрокой, Значение",
				ИмяПараметра, УсловиеСтрокой, Условие.Значение[0]));
			МассивУсловий.Добавить(Новый Структура("ИмяПараметра, УсловиеСтрокой, Значение",
				ИмяВторогоПараметра, "", Условие.Значение[1]));
		ИначеЕсли СтрНайти(Шаблон, "%4") > 0 Тогда
			УсловиеСтрокой = СтрШаблон(Шаблон, Условие.ИмяРеквизита, """%""",, ИмяПараметра);
			МассивУсловий.Добавить(Новый Структура("ИмяПараметра, УсловиеСтрокой, Значение",
				ИмяПараметра, УсловиеСтрокой, Условие.Значение));
		Иначе
			УсловиеСтрокой = СтрШаблон(Шаблон, Условие.ИмяРеквизита, ИмяПараметра);
			МассивУсловий.Добавить(Новый Структура("ИмяПараметра, УсловиеСтрокой, Значение",
				ИмяПараметра, УсловиеСтрокой, Условие.Значение));
		КонецЕсли;
		
		Сч = Сч + 1;
	КонецЦикла;
	
	СхемаЗапроса.Вставить("СчетчикПараметров", Сч);
	
	Возврат МассивУсловий;
	
КонецФункции

Функция ПолучитьУсловияСоединения(Предикат)
	
	МассивУсловий = Новый Массив;
	Если Предикат = Неопределено Тогда
		МассивУсловий.Добавить(
			Новый Структура("ЛеваяЧасть, ПраваяЧасть, УсловиеСтрокой",,, "ИСТИНА"));
			
		Возврат МассивУсловий;
	КонецЕсли;
	
	Для каждого Условие Из Предикат.Условия Цикл
		Шаблон = ШаблонУсловия(Условие.ВидСравнения, Ложь);
		МассивУсловий.Добавить(Новый Структура("ЛеваяЧасть, ПраваяЧасть, УсловиеСтрокой",
			Условие.ИмяРеквизита, Условие.Значение, СтрШаблон(Шаблон, Условие.ИмяРеквизита, Условие.Значение)));
	КонецЦикла;
	
	Возврат МассивУсловий;
	
КонецФункции

Функция ШаблонУсловия(ВидСравнения, Амперсанд = Истина)
	
	Выражения = СхПроцессорыПредикатовКлиентСервер.Выражения();
	
	Если ВидСравнения = Выражения.Равно Тогда
		Шаблон = "%1 = " + ?(Амперсанд, "&", "") + "%2";
	ИначеЕсли ВидСравнения = Выражения.НеРавно Тогда
		Шаблон = "НЕ %1 = " + ?(Амперсанд, "&", "") + "%2";
	ИначеЕсли ВидСравнения = Выражения.Больше Тогда
		Шаблон = "%1 > " + ?(Амперсанд, "&", "") + "%2";
	ИначеЕсли ВидСравнения = Выражения.БольшеИлиРавно Тогда
		Шаблон = "%1 >= " + ?(Амперсанд, "&", "") + "%2";
	ИначеЕсли ВидСравнения = Выражения.Меньше Тогда
		Шаблон = "%1 < " + ?(Амперсанд, "&", "") + "%2";
	ИначеЕсли ВидСравнения = Выражения.МеньшеИлиРавно Тогда
		Шаблон = "%1 <= " + ?(Амперсанд, "&", "") + "%2";
	ИначеЕсли ВидСравнения = Выражения.ВСписке Тогда
		Шаблон = "%1 В (" + ?(Амперсанд, "&", "") + "%2)";
	ИначеЕсли ВидСравнения = Выражения.НеВСписке Тогда
		Шаблон = "%1 НЕ В (" + ?(Амперсанд, "&", "") + "%2)";
	ИначеЕсли ВидСравнения = Выражения.Подобно Тогда
		Шаблон = "%1 ПОДОБНО %2 + " + ?(Амперсанд, "&", "") + "%4 + %2";
	ИначеЕсли ВидСравнения = Выражения.НеПодобно Тогда
		Шаблон = "НЕ %1 ПОДОБНО %2 + " + ?(Амперсанд, "&", "") + "%4 + %2";
	ИначеЕсли ВидСравнения = Выражения.Между Тогда
		Шаблон = "%1 МЕЖДУ " + ?(Амперсанд, "&", "") + "%2 И " + ?(Амперсанд, "&", "") + "%3";
	Иначе
		ВызватьИсключение "Неподдерживаемое выражение предиката " + ВидСравнения;
	КонецЕсли;
	
	Возврат Шаблон;
	
КонецФункции

Функция ПолучитьЭлементПорядка(Поле)
	
	_Поле = СокрЛП(Поле);
	
	Если СтрНайти(_Поле, " ") > 0 Тогда
		МассивЭлементовПоля = СтрРазделить(_Поле, " ");
		Возврат Новый Структура("ИмяПоля, Направление",
			МассивЭлементовПоля[0], МассивЭлементовПоля[1])
	КонецЕсли;
		
	Возврат Новый Структура("ИмяПоля, Направление",
		_Поле, Неопределено);
	
КонецФункции

Функция ПолучитьСтруктуруФункции()
	
	Возврат Новый Структура("Функция, Параметры");
	
КонецФункции

Функция ПривестиЗначение(Значение)
	
	Если ТипЗнч(Значение) = Тип("Число") Тогда
		Возврат Формат(Значение, "ЧН=; ЧГ=0");
	ИначеЕсли ТипЗнч(Значение) = Тип("Строка") Тогда
		Возврат СтрШаблон("""%1""", Значение);
	КонецЕсли;
	
	ВызватьИсключение "ПривестиЗначение: значение неизвестного типа";
	
КонецФункции

Функция ПолучитьУсловияСтрокой(Условия, МассивПараметров)
	
	УсловиеСтрокой = "";
	Для каждого Условие Из Условия Цикл
		Если Не ПустаяСтрока(УсловиеСтрокой) Тогда
			УсловиеСтрокой = УсловиеСтрокой + " И ";
		КонецЕсли;
		
		УсловиеСтрокой = УсловиеСтрокой + Условие.УсловиеСтрокой;
		МассивПараметров.Добавить(Новый Структура("ИмяПараметра, Значение",
			Условие.ИмяПараметра, Условие.Значение));
	КонецЦикла;
	
	Возврат УсловиеСтрокой;
	
КонецФункции

#КонецОбласти
