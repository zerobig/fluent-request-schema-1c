
#Область ПрограммныйИнтерфейс

// Создает структуру нового запроса
//
// Параметры:
//   ИсточникДанных - Строка - таблица для получения данных
//   Первые         - Число  - ограничение количества выборки
//   Различные      - Булево - признак получения неповторяющихся значений
//   Разрешенные    - Булево - признак ограничения выборки с применением RLS
//
// Возвращаемое значение:
//   - ОбработкаОбъект.СЗ_ПроцессорСхемЗапроса - менеджер для серверного формирования запроса
//   - ФормаКлиентскогоПриложения              - менеджер для клиентского формирования запроса
//
Функция НовыйЗапрос(ИсточникДанных, Первые = 0, Различные = Ложь, Разрешенные = Ложь) Экспорт
	
	ПроцессорСхемЗапроса = СЗ_ПроцессорыСхемЗапросаКлиентСервер
		.НовыйПроцессорСхемЗапроса(ИсточникДанных, Первые, Различные, Разрешенные);
	
	Возврат ПроцессорСхемЗапроса;
	
КонецФункции

// Создает структуру нового предиката
//
// Возвращаемое значение:
//   - ОбработкаОбъект.СЗ_ПроцессорСхемЗапроса - менеджер для серверного формирования предиката
//   - ФормаКлиентскогоПриложения              - менеджер для клиентского формирования предиката
//
Функция Предикат() Экспорт
	
	ПроцессорПредикатов = СЗ_ПроцессорыПредикатовКлиентСервер
		.НовыйПроцессорПредикатов();
	
	Возврат ПроцессорПредикатов;
	
КонецФункции

// Возвращает структуру с данными поля запроса
//
// Параметры:
//   ИмяПоля   - Строка - 
//   Источник  - Строка - 
//   Псевдоним - Строка - 
//
// Возвращаемое значение:
//   Структура - 
//
Функция НовоеПоле(ИмяПоля, Источник, Псевдоним) Экспорт
	
	// TODO: В модуле СЗ_ПроцессорыСхемЗапросаКлиентСерверСлужебный так же регулярно требуетс
	//       такая структура. Рефакторинг!
	
	Возврат Новый Структура("ИмяПоля, Источник, Псевдоним",
		ИмяПоля, Источник, Псевдоним);
	
КонецФункции
	
#КонецОбласти
